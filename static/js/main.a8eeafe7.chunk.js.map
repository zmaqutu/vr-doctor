{"version":3,"sources":["components/Model.js","components/HospitalScene.js","App.js","reportWebVitals.js","index.js"],"names":["Model","gltf","useGLTF","object","scene","dispose","HospitalScene","width","window","innerWidth","height","innerHeigh","cameraPosition","useRef","colorManagement","camera","position","current","fov","aspect","far","fallback","visible","OrbitControls","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQAWeA,MAPf,WACI,IAAMC,EAAOC,YAAQ,sBAAsB,GAC3C,OACI,2BAAWC,OAASF,EAAKG,MAAOC,QAAW,QC6BpCC,MA9Bf,WACI,IAAIC,EAAQC,OAAOC,WACfC,EAASF,OAAOG,WAEdC,EAAiBC,iBAAO,CAAC,KAAM,IAAK,MAC1C,OACI,mCACI,eAAC,IAAD,CACAC,iBAAe,EACfC,OACI,CACIC,SAAUJ,EAAeK,QACzBC,IAAK,KACLC,OAAQZ,EAAQG,EAChBU,IAAK,KAPb,UAWI,cAAC,WAAD,CAAUC,SAAY,KAAtB,SACI,sBAAMC,SAAO,EAACN,SAAY,CAAC,EAAE,EAAE,GAA/B,SACI,cAAC,EAAD,QAGR,cAACO,EAAA,EAAD,IACA,cAAC,IAAD,UCrBDC,MANf,WACE,OACE,cAAC,EAAD,KCOWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a8eeafe7.chunk.js","sourcesContent":["import React from 'react';\nimport { OrbitControls, useGLTF } from 'drei';\n\n\nfunction Model() {\n    const gltf = useGLTF(\"/assets/scene.gltf\", true);\n    return (\n        <primitive object ={gltf.scene} dispose = {null} />\n    )\n}\n\nexport default Model\n","import React, { useState, useRef, Suspense } from 'react';\nimport { OrbitControls, useGLTFLoader } from 'drei';\nimport { Canvas, useFrame, useThree } from 'react-three-fiber';\nimport { VRCanvas, DefaultXRControllers } from 'react-xr';\nimport Model from './Model';\n\nfunction HospitalScene() {\n    let width = window.innerWidth;\n    let height = window.innerHeigh; \n\n    const cameraPosition = useRef([0.38,-0.39,0.18]);\n    return (\n        <>\n            <VRCanvas\n            colorManagement\n            camera={\n                {\n                    position: cameraPosition.current,\n                    fov: 52.5,\n                    aspect: width / height, \n                    far: 5000,\n                    }\n                }\n            >\n                <Suspense fallback = {null}>\n                    <mesh visible position = {[0,0,0]}>\n                        <Model/>\n                    </mesh>\n                </Suspense>\n                <OrbitControls />\n                <DefaultXRControllers/>\n            </VRCanvas>\n        </>\n    )\n}\n\nexport default HospitalScene\n","import './App.scss';\nimport HospitalScene from './components/HospitalScene';\n\nfunction App() {\n  return (\n    <HospitalScene/>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}